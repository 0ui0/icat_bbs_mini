// Generated by CoffeeScript 2.6.1

/*
{
  name: "空间"
  url: "/zone"
  focus: no
}
*/
var Box, Css, Dropdown, HomeLeft, Nav, Notice, Password, User, leftArr, m, user;

m = require("mithril");

Box = require("./box");

Nav = require("./nav");

Dropdown = require("./dropdown");

Notice = require("./notice");

Css = require("./css");

user = require("./user");

HomeLeft = require("../home/home_left");

leftArr = [
  {
    name: "首页",
    url: "/home",
    focus: true
  }
];

User = new Box();

User = {...User};

Password = new Box();

Password = {...Password};

module.exports = {
  data: {
    loggedUser: null,
    newNotice: 0
  },
  method: {
    getNewNotice: null
  },
  oninit: async function(v) {
    var i, item, len, ref, timer;
    await user.fresh();
    for (i = 0, len = leftArr.length; i < len; i++) {
      item = leftArr[i];
      if (item.url === m.route.get()) {
        item.focus = true;
      } else {
        item.focus = false;
      }
    }
    // 自动拉取新消息提醒
    if (user != null ? (ref = user.info) != null ? ref.uid : void 0 : void 0) {
      if (timer) {
        clearInterval(timer);
      }
      v.state.method.getNewNotice = async function() {
        var newNotice;
        newNotice = (await m.request({
          url: "/api/notice/getNew",
          method: "get"
        }));
        if (!newNotice.valid) {
          return Notice.launch({
            msg: newNotice.msg
          });
        }
        if (newNotice.data > 0) {
          return v.state.data.newNotice = newNotice.data;
        }
      };
      await v.state.method.getNewNotice();
      return timer = setInterval(v.state.method.getNewNotice, 5 * 60 * 1000);
    }
  },
  view: function() {
    var _this;
    _this = this;
    return m("header", [
      m(Notice),
      m(Css),
      // 返回按钮

      // 导航
      m(Nav,
      {
        color: "yellow",
        isTop: true
      },
      [
        m(Box,
        {
          color: "black",
          isBtn: true,
          onclick: function() {
            return HomeLeft.data.show = !HomeLeft.data.show;
          }
        },
        (document.querySelector("title")).innerHTML),
        m(Box,
        {
          color: "deepBlue",
          isBtn: true,
          onclick: function() {
            return window.history.back();
          }
        },
        [m("strong",
        "<")]),
        // 左边
        m("left",
        [
          leftArr.map(function(item) {
            return m(Box,
          {
              color: item.focus ? "deepRed" : "dark",
              isBtn: true,
              onclick: function() {
                return m.route.set(item.url);
              }
            },
          item.name);
          })
        ]),
        // 右边
        m("right",
        {
          style: {
            marginLeft: "auto"
          }
        },
        [
          m(Dropdown,
          {
            style: {
              display: "grid",
              gridTemplateColumns: "repeat(2,120px)",
              gridTemplateRows: "repeat(2,1fr)"
            },
            name1: _this.data.newNotice > 0 ? "*新消息" : "(○’ω’○)",
            name2: "(*≧m≦*)",
            color: "red",
            isClick: true,
            class: "animated pulse",
            child: function(parent) {
              if (!localStorage.user) {
                return [
                  m(User,
                  {
                    tagName: "input[type=text][placeholder=用户名]",
                    style: {
                      width: "auto",
                      display: "block",
                      border: "0.1rem solid #aaaaaa"
                    }
                  }),
                  m(Password,
                  {
                    tagName: "input[type=password][placeholder=密码]",
                    style: {
                      width: "auto",
                      display: "block",
                      border: "0.1rem solid #aaaaaa"
                    }
                  }),
                  m(Box,
                  {
                    style: {
                      display: "block"
                    },
                    color: "red",
                    isBtn: true,
                    onclick: async function(__this,
                  e,
                  v,
                  self) {
                      var tmp;
                      //校验用户名和密码

                      //等待发送请求
                      tmp = (await m.request({
                        method: "post",
                        url: "/sign",
                        body: {
                          user: User.data.value,
                          password: Password.data.value
                        }
                      }));
                      if (tmp.msg !== "登录成功") {
                        // 如果验证未通过，返回并提示信息
                        Notice.launch({
                          msg: tmp.msg
                        });
                      }
                      if (!tmp.valid) {
                        return;
                      }
                      
                      // 写入缓存，登录成功                   
                      if (tmp.data) {
                        localStorage.user = tmp.data.user;
                        _this.data.loggedUser = tmp.data;
                        return user.info = tmp.data;
                      }
                    }
                  },
                  "注册/登录"),
                  m(Box,
                  {
                    style: {
                      display: "block"
                    },
                    color: "dark",
                    isBtn: true,
                    onclick: function(__this,
                  e,
                  v,
                  self) {
                      return parent.data.showMenu = false;
                    }
                  },
                  "收起")
                ];
              } else {
                return [
                  m(Box,
                  {
                    color: "dark",
                    isBtn: true
                  },
                  `欢迎：${user.info.user}`),
                  m(Box,
                  {
                    color: "red",
                    isBtn: true,
                    onclick: async function() {
                      var err,
                  tmp;
                      try {
                        tmp = (await m.request({
                          method: "get",
                          url: "/logout"
                        }));
                        localStorage.removeItem("user");
                        _this.data.loggedUser = null;
                        return user.info = {};
                      } catch (error) {
                        err = error;
                        return console.log(err);
                      }
                    }
                  },
                  "登出"),
                  m(Box,
                  {
                    color: _this.data.newNotice > 0 ? "yellow" : void 0,
                    isBtn: true
                  },
                  _this.data.newNotice > 0 ? `消息(${_this.data.newNotice})` : "消息"),
                  m(Box,
                  {
                    isBtn: true
                  },
                  "签到")
                ];
              }
            }
          })
        ])
      ])
    ]);
  }
};
