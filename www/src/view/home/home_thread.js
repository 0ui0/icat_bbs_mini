// Generated by CoffeeScript 2.6.1
var Box, Editor, Img, Notice, Reply, Tag, Tools, format, homeData, m, opera, user;

m = require("mithril");

// common
Box = require("../common/box");

Img = require("../common/img");

Tag = require("../common/tag");

user = require("../common/user");

Notice = require("../common/notice");

//help
Tools = require("../help/tools");

format = require("../help/format");

// component
Reply = require("./home_reply");

Editor = require("./home_editor");

opera = require("./home_opera");

// data
homeData = require("./home_data");

module.exports = function() {
  return {
    oninit: async function(v) {
      await homeData.fresh(v.attrs.self.pid);
      if (v.attrs.pid) {
        return v.state.data.showMore = true;
      }
    },
    data: {
      showMore: false, //显示全文
      showReply: false
    },
    method: {
      showReply: function(v) {
        return v.state.data.showReply = !v.state.data.showReply;
      }
    },
    view: function(v) {
      var _this, item, ref, ref1, ref2, self;
      _this = this;
      self = v.attrs.self;
      return m("", {
        class: v.attrs.pid ? "" : "animated slideInDown",
        "data-key": self.pid
      }, [
        m("",
        {
          style: {
            display: "grid",
            gridTemplateColumns: "22% 1fr"
          }
        },
        [
          m("left",
          {
            style: {
              textAlign: "center"
            }
          },
          [
            // 用户名
            m(Box,
            {
              color: self.author === ((ref = user.info) != null ? ref.user : void 0) ? "red" : "black",
              isBlock: true
            },
            self.author),
            // 头像
            m(Img,
            {
              style: {
                width: "calc(100% - 4rem)",
                borderRadius: "0.5rem"
              },
              src: (ref1 = self.icat_users_extend.avatar) != null ? ref1 : "./statics/default_avatar.jpg",
              ext: {
                onclick: function() {
                  return console.log(self);
                }
              }
            }),
            // 勋章
            m(Tag,
            {
              styleExt: {
                display: "flex",
                justifyContent: "center",
                flexWrap: "wrap",
                padding: 0
              },
              color: "white"
            },
            [
              m(Tag,
              {
                color: "yellow"
              },
              "喵"),
              m(Tag,
              {
                color: "red"
              },
              "会"),
              self.icat_users_extend.power > 90 ? m(Tag,
              {
                color: "deepBlue"
              },
              "管") : void 0
            ])
          ]),
          m("right",
          [
            // 帖子标题
            m(Box,
            {
              color: "dark",
              isBlock: true
            },
            m(`a[href=#!/home/${self.pid}]`,
            {
              style: {
                color: "white"
              }
            },
            self.title)),
            // 帖子内容
            m(Box,
            {
              isBlock: true
            },
            [
              m("",
              {
                style: {
                  fontSize: "1rem"
                }
              },
              "最后编辑：" + new Date(self.finallyTime).toLocaleString("chinese",
              {
                hour12: false
              })),
              self.content.length < 150 ? m("",
              {
                class: "article",
                style: {
                  wordWrap: "break-word",
                  overflow: "auto"
                }
              },
              m.trust(format(self.content))) : [
                m("",
                {
                  class: "article",
                  style: {
                    wordWrap: "break-word",
                    overflow: "auto",
                    maxHeight: !_this.data.showMore ? "18rem" : void 0
                  }
                },
                m.trust(format(self.content))),
                m("a",
                {
                  onclick: function() {
                    return _this.data.showMore = !_this.data.showMore;
                  }
                },
                _this.data.showMore ? "[收起Biu]" : "[展开Wiu]")
              ]
            ]),
            // 编辑菜单
            m(Box,
            {
              isBlock: true
            },
            [
              m(Tag,
              {
                color: "white",
                isBtn: true,
                onclick: async function() {
                  return (await opera.like(self));
                }
              },
              "赞"),
              m(Tag,
              {
                color: "white",
                isBtn: true,
                onclick: async function() {
                  return (await opera.edit(self));
                }
              },
              "编辑"),
              m(Tag,
              {
                color: "white",
                isBtn: true,
                onclick: async function() {
                  return (await opera.reply(self,
              _this));
                }
              },
              "回复"),
              m(Tag,
              {
                color: "white",
                isBtn: true,
                onclick: async function() {
                  return (await opera.del(self));
                }
              },
              "删除"),
              m(Tag,
              {
                color: self.isTop > 0 ? "yellow" : "white",
                isBtn: true,
                onclick: async function() {
                  return (await opera.top(self));
                }
              },
              self.isTop > 0 ? "取消置顶" : "置顶"),
              homeData.posts[v.attrs.self.pid][0] ? m(Tag,
              {
                color: "white",
                isBtn: true,
                onclick: function() {
                  return _this.method.showReply(v);
                }
              },
              `${_this.data.showReply ? "( ๑ŏ ﹏ ŏ๑ )" : "|･ω･｀)"}`) : void 0
            ])
          ])
        ]),
        // 点赞显示区域
        m(Box,
        {
          isBlock: true,
          color: "white"
        },
        [
          m(Tag,
          {
            color: "red",
            styleExt: {
              marginRight: 0,
              borderRadius: "1rem 0 0 1rem"
            }
          },
          "赞"),
          self.likes ? (ref2 = Object.values(JSON.parse(self.likes))) != null ? ref2.map(function(item) {
            return m(Tag,
          {
              color: "dark",
              styleExt: {
                marginLeft: 0,
                marginRight: 0,
                borderRadius: "0"
              }
            },
          item);
          }) : void 0 : void 0,
          m(Tag,
          {
            color: "yellow",
            styleExt: {
              marginLeft: 0,
              borderRadius: "0 1rem 1rem 0"
            }
          },
          "@")
        ]),
        // 回复显示区域
        _this.data.showReply ? m("",
        {
          style: {
            display: "block",
            whiteSpace: "nowrap",
            overflow: "auto"
          }
        },
        [
          (function() {
            var i,
          len,
          ref3,
          results;
            ref3 = homeData.posts[v.attrs.self.pid];
            results = [];
            for (i = 0, len = ref3.length; i < len; i++) {
              item = ref3[i];
              results.push(m(Reply,
          {
                key: item.pid,
                self: item,
                isThread: true
              }));
            }
            return results;
          })()
        ]) : void 0,
        
        // 显示回复
        homeData.posts[v.attrs.self.pid][0] && _this.data.showReply ? m(Box,
        {
          isBlock: true,
          isBtn: true,
          onclick: function() {
            return _this.method.showReply(v);
          }
        },
        `${_this.data.showReply ? "( ๑ŏ ﹏ ŏ๑ )" : "|･ω･｀)"}`) : void 0
      ]);
    }
  };
};
