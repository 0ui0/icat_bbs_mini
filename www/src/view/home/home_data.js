// Generated by CoffeeScript 2.6.1
var i, item, m, posts;

m = require("mithril");

posts = {};

for (item = i = 0; i <= 99999; item = ++i) {
  posts[item] = [];
}

module.exports = {
  posts: posts,
  fresh: async function(linkid, desc, limit, obj) {
    var err, ref, tmp;
    try {
      tmp = (await m.request({
        method: "get",
        url: `/api/posts/get?${limit ? `limit=${limit}` : ""}${desc ? "&&desc=true" : ""}&&linkid=${linkid}`
      }));
      posts[linkid] = tmp.data;
      if ((obj != null ? (ref = obj.data) != null ? ref.allCount : void 0 : void 0) >= 0) {
        obj.data.allCount = tmp.allCount;
      }
      if (!tmp.valid) {
        return console.log(tmp.msg);
      }
    } catch (error) {
      err = error;
      return console.log(err);
    }
  },
  getOne: async function(pid) {
    var err, tmp;
    try {
      tmp = (await m.request({
        method: "get",
        url: `/api/posts/get?pid=${pid}`
      }));
      posts["0"] = [tmp.data];
      if (!tmp.valid) {
        return console.log(tmp.msg);
      }
    } catch (error) {
      err = error;
      return console.log(err);
    }
  }
};
