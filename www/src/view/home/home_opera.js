// Generated by CoffeeScript 2.6.1
var Editor, Notice, homeData, isLogined, m;

m = require("mithril");

Editor = require("./home_editor");

homeData = require("./home_data");

Notice = require("../common/notice");

isLogined = (require("../help/tools")).isLogined;

module.exports = {
  del: function(self) {
    if (!isLogined()) {
      return;
    }
    return Notice.launch({
      msg: "确定要删除吗？（注意这将同时清空所有回复）",
      confirm: async function() {
        var err, tmp;
        try {
          tmp = (await m.request({
            method: "post",
            url: "/api/posts/del",
            body: {
              pid: self.pid
            }
          }));
          await homeData.fresh(self.linkid, (self.linkid === 0 ? true : false), 0, self);
          if (!tmp.valid) {
            return Notice.launch({
              msg: tmp.msg
            });
          }
        } catch (error) {
          err = error;
          return console.log(err);
        }
      }
    });
  },
  edit: function(self) {
    var fn;
    if (!isLogined()) {
      return;
    }
    fn = function() {
      Editor.data.show = true;
      Editor.Text.data.value = self.content;
      Editor.data.pid = self.pid;
      Editor.data.linkid = self.linkid; //更新用
      return Editor.data.self = self;
    };
    if (Editor.Text.data.value.length > 0) {
      return Notice.launch({
        msg: "即将清空已编辑内容，要继续吗？",
        confirm: function() {
          return fn();
        },
        calcel: function() {}
      });
    } else {
      return fn();
    }
  },
  reply: function(self, _this) {
    var fn;
    if (!isLogined()) {
      return;
    }
    fn = function() {
      Editor.data.show = true;
      Editor.data.linkid = self.pid;
      Editor.data.replyTo = self.author;
      Editor.data.pid = null;
      Editor.data.self = self;
      Editor.Text.data.value = "";
      return Editor.method.showReply = function() {
        _this.data.showReply = true;
        return _this.data.showMenu = false;
      };
    };
    if (Editor.Text.data.value.length > 0) {
      return Notice.launch({
        msg: "即将清空已编辑内容，要继续吗？",
        confirm: function() {
          return fn();
        },
        calcel: function() {}
      });
    } else {
      return fn();
    }
  },
  top: async function(self) {
    var err, tmp;
    if (!isLogined()) {
      return;
    }
    try {
      tmp = (await m.request({
        method: "post",
        url: "/api/posts/top",
        body: {
          pid: self.pid
        }
      }));
      if (!tmp.valid) {
        return Notice.launch({
          msg: tmp.msg
        });
      }
      return (await homeData.fresh(self.linkid, self.linkid === 0 ? true : false));
    } catch (error) {
      err = error;
      return console.log(err);
    }
  },
  like: async function(self) {
    var err, tmp;
    if (!isLogined()) {
      return;
    }
    try {
      tmp = (await m.request({
        method: "post",
        url: "/api/posts/like",
        body: {
          pid: self.pid
        }
      }));
      if (!tmp.valid) {
        return Notice.launch({
          msg: tmp.msg
        });
      }
      return (await homeData.fresh(self.linkid, self.linkid === 0 ? true : false));
    } catch (error) {
      err = error;
      return console.log(err);
    }
  }
};
