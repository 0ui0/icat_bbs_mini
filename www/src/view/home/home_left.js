// Generated by CoffeeScript 2.6.1
var Avatar, Box, Img, Notice, Search, Tag, homeData, isMobile, m, myVars, tools, user;

m = require("mithril");

Box = require("../common/box");

Img = require("../common/img");

Tag = require("../common/tag");

user = require("../common/user");

Notice = require("../common/notice");

Avatar = require("../zone/zone_avatar");

tools = require("../help/tools");

myVars = require("../help/myVars");

homeData = require("./home_data");

isMobile = tools.isMobile();

Search = new Box();

module.exports = {
  oninit: function(v) {
    var showOrClose;
    showOrClose = function() {
      if (isMobile) {
        return v.state.data.show = false;
      } else {
        return v.state.data.show = true;
      }
    };
    window.addEventListener("resize", function() {
      isMobile = tools.isMobile();
      showOrClose();
      return m.redraw();
    });
    return showOrClose();
  },
  data: {
    show: true,
    press: 0
  },
  view: function() {
    var _this, item, ref, ref1, ref2;
    _this = this;
    // 帖子分类
    if (_this.data.show) {
      return m(Box, {
        onbeforeremove: function(v) {
          if (isMobile) {
            v.dom.classList.add("slideOutLeft");
            return new Promise(function(res, rej) {
              return v.dom.addEventListener("animationend", res);
            });
          }
        },
        class: `animated ${isMobile ? "slideInLeft" : ""}`,
        style: {
          textAlign: "center",
          flex: 1,
          minWidth: "20.6rem",
          ...(isMobile ? {
            position: "fixed",
            top: 0,
            left: 0,
            bottom: 0,
            zIndex: "200",
            margin: 0,
            borderRadius: 0,
            background: "rgba(255,255,255,0.9)",
            width: "20.6rem"
          } : void 0)
        },
        color: "white"
      }, [
        isMobile ? m(Box,
        {
          color: "dark",
          style: {
            position: "fixed",
            top: 0,
            left: 0,
            borderRadius: "5rem",
            width: "1rem",
            height: "1rem"
          },
          onclick: function() {
            return _this.data.show = false;
          }
        },
        "x") : void 0,
        m(Img,
        {
          src: (ref = (ref1 = user.info) != null ? ref1.avatar : void 0) != null ? ref : "./statics/default_avatar.jpg",
          ext: {
            onclick: function() {
              if (!tools.isLogined()) {
                return;
              }
              return Notice.launch({
                content: Avatar
              });
            }
          }
        }),
        m("", //标签容器
        {
          style: {
            display: "flex",
            justifyContent: "center",
            margin: "0.5rem auto"
          }
        },
        [
          (function() {
            var i,
          len,
          ref2,
          ref3,
          ref4,
          ref5,
          results;
            ref5 = [
              {
                name: "帖子",
                num: (ref2 = user.info) != null ? ref2.postCount : void 0
              },
              {
                name: "回复",
                num: (ref3 = user.info) != null ? ref3.replyCount : void 0
              },
              {
                name: "点赞",
                num: (ref4 = user.info) != null ? ref4.likeCount : void 0
              }
            ];
            results = [];
            for (i = 0, len = ref5.length; i < len; i++) {
              item = ref5[i];
              results.push(m("",
          {
                flex: 1
              },
          [
                m(Tag,
                {
                  isBlock: true,
                  isWide: true,
                  color: "red"
                },
                item.name),
                m("span",
                {
                  style: {
                    color: "#cccccc",
                    fontWeight: "blod",
                    fontSize: "1.6rem"
                  }
                },
                item.num ? item.num : "-")
              ]));
            }
            return results;
          })()
        ]),
        
        // 搜索框
        m(Box,
        {
          style: {
            padding: "0.5rem",
            borderRadius: "10rem"
          }
        },
        [
          m("",
          {
            style: {
              display: "flex",
              justifyContent: "center",
              alignItems: "center"
            }
          },
          [
            m(Search,
            {
              tagName: "input[type=text]",
              color: "white",
              placeholder: "搜索其实很简单",
              style: {
                borderRadius: "10rem 0 0 10rem",
                width: "10rem",
                margin: 0,
                height: "2rem"
              }
            }),
            m(Box,
            {
              color: "deepBlue",
              isBtn: true,
              style: {
                borderRadius: "10rem",
                borderRadius: "0 10rem 10rem 0",
                margin: 0,
                height: "2rem"
              },
              onclick: function() {
                if (Search.data.value === "") {

                } else {
                  return m.route.set(`/search/${Search.data.value}`);
                }
              }
            },
            "搜索")
          ])
        ]),
        // 释放压力
        m("",
        {
          style: {
            display: "grid",
            gridTemplateColumns: "1fr 1fr"
          }
        },
        [
          m(Box,
          {
            isBtn: true,
            style: {
              marginTop: "1rem"
            },
            oninit: async function() {
              if (localStorage.user) {
                return _this.data.press = (await myVars.get("press"));
              }
            },
            onclick: async function() {
              var hello;
              if (!tools.isLogined()) {
                return;
              }
              _this.data.press = "...";
              if (!((await myVars.get("press"))) || ((await myVars.get("press"))) * 1 > 999) {
                await myVars.set("press",
          0);
              }
              hello = (await myVars.get("press"));
              await myVars.set("press",
          hello * 1 + 1);
              return _this.data.press = (await myVars.get("press"));
            }
          },
          `戳我(${(ref2 = _this.data.press) != null ? ref2 : 0})`),
          // 压力排行榜
          m(Box,
          {
            isBtn: true,
            color: "dark",
            style: {
              marginTop: "1rem"
            },
            onclick: function() {
              var rank;
              if (!tools.isLogined()) {
                return;
              }
              rank = {
                list: [],
                oninit: async function(v) {
                  var err,
          tmp;
                  try {
                    tmp = (await myVars.pull());
                    return v.state.list = tmp.data.filter(function(item) {
                      return item.key === "press";
                    });
                  } catch (error) {
                    err = error;
                    return console.log(err);
                  }
                },
                view: function() {
                  _this = this;
                  return m("",
          [
                    (function() {
                      var i,
                    len,
                    ref3,
                    results;
                      ref3 = _this.list.sort(function(a, b) {
                        return b.value * 1 - a.value * 1;
                      });
                      results = [];
                      for (i = 0, len = ref3.length; i < len; i++) {
                        item = ref3[i];
                        results.push((function() {
                          var ref4;
                          return m("",
                    [
                            m(Box,
                            {
                              color: item.uid === ((ref4 = user.info) != null ? ref4.uid : void 0) ? "red" : "dark"
                            },
                            item.user),
                            m(Box,
                            item.value)
                          ]);
                        })());
                      }
                      return results;
                    })()
                  ]);
                }
              };
              return Notice.launch({
                type: "peace",
                content: rank
              });
            }
          },
          "排行榜")
        ])
      ]);
    }
  }
};
