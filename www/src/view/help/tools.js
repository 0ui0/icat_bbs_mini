// Generated by CoffeeScript 2.6.1
var Notice, isDesktop, isFullHD, isLogined, isMobile, isTablet, isWideScreen, m, startMove, user;

m = require("mithril");

Notice = require("../common/notice");

user = require("../common/user");

isMobile = function() {
  var pageWidth;
  pageWidth = document.documentElement.clientWidth;
  if (pageWidth <= 768) {
    return true;
  } else {
    return false;
  }
};

isTablet = function() {
  var pageWidth;
  pageWidth = document.documentElement.clientWidth;
  if ((768 < pageWidth && pageWidth <= 1024)) {
    return true;
  } else {
    return false;
  }
};

isDesktop = function() {
  var pageWidth;
  pageWidth = document.documentElement.clientWidth;
  if ((1024 < pageWidth && pageWidth <= 1215)) {
    return true;
  } else {
    return false;
  }
};

isWideScreen = function() {
  var pageWidth;
  pageWidth = document.documentElement.clientWidth;
  if ((1215 < pageWidth && pageWidth <= 1407)) {
    return true;
  } else {
    return false;
  }
};

isFullHD = function() {
  var pageWidth;
  pageWidth = document.documentElement.clientWidth;
  if (pageWidth > 1407) {
    return true;
  } else {
    return false;
  }
};

isLogined = function() {
  var ref;
  if (!((ref = user.info) != null ? ref.uid : void 0)) {
    Notice.launch({
      msg: "请登录哈~"
    });
    return false;
  } else {
    return true;
  }
};

startMove = function(obj, target, prop, fnEnd) {
  var timer;
  clearInterval(timer);
  return timer = setInterval(function() {
    var current, speed;
    if (prop === "opacity") {
      current = Math.round(getComputedStyle(obj, false)[prop]);
    } else {
      current = parseInt(getComputedStyle(obj, false)[prop]);
    }
    speed = (target - current) / 6;
    speed = speed > 0 ? Math.ceil(speed) : Math.floor(speed);
    if (Math.abs(current - target) <= speed) {
      clearInterval(timer);
      obj.style[prop] = prop === "opacity" ? target : target + "px";
      if (fnEnd) {
        fnEnd();
      }
    } else {
      obj.style[prop] = prop === "opacity" ? current + speed : current + speed + "px";
    }
    //console.log "当前位置"+current,"目标"+target
    return m.redraw();
  }, 30);
};

module.exports = {
  isMobile: isMobile,
  isTablet: isTablet,
  isDesktop: isDesktop,
  isWideScreen: isWideScreen,
  isFullHD: isFullHD,
  isLogined: isLogined,
  startMove: startMove
};
